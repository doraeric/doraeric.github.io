[{"categories":null,"content":"沒錯，就跟看到的圖一樣，兩隻手機直接用 Type-C 對接就可以傳檔案了！ 最近在研究用手機和平板代替帶筆電出門的可行性，再加上有看到別人直接這樣用，所以測試一下到底要怎麼弄。我之前只有偶然成功觸發過，後來又傳不了檔案，所以設定沒調對的話是用不了的。 先說測試出來的重點： 兩隻手機必須擔任不同角色，一隻當電腦，一隻當外接 usb 當電腦的那隻手機要負責提供電源，不要選到檔案傳輸 當外接 usb 的那隻手機要選檔案傳輸的選項 當電腦的那隻手機要用 android 內建的檔案瀏覽器才有權限可以直接看到另一隻手機的檔案 只有當電腦的那隻手機可以同時看到兩隻手機的檔案，當外接的那隻看不到另一隻 我用詞可能沒有很精確，反正重要的是聽的懂就好 測試用的兩隻手機是 xperia 和 pixel，分別是 android 8 和 13。有可能是 xperia 版本比較舊，所以雙向溝通的部份沒那麼順利，但設定調對一樣可以通。 ","date":"2023-08-26","objectID":"/2023/08/android-otg/:0:0","tags":null,"title":"Android OTG 手機對接傳檔案","uri":"/2023/08/android-otg/"},{"categories":null,"content":"Xperia \u003c- Pixel 假設 xperia 這隻當電腦，pixel 這隻當外接的 xperia 要選擇「提供電源」 pixel 的 usb 用途選擇「檔案轉移 / Android Auto」 pixel 中還有個「USB 的控制裝置」，選「這個裝置」 「USB 的控制裝置」找到的英文原文是 “USB controlled by”，但不管中文還是英文都聽不太懂它的意思。我自己是理解成「USB 外接裝置是…」，感覺比較白話 Xperia 可以找到一個內建叫「檔案」的應用程式，打開來可以看到 pixel 上的檔案。 注意：必須是內建的才有系統的權限，從 Google Play 安裝看起來差不多的程式是沒用的。 ","date":"2023-08-26","objectID":"/2023/08/android-otg/:1:0","tags":null,"title":"Android OTG 手機對接傳檔案","uri":"/2023/08/android-otg/"},{"categories":null,"content":"Pixel \u003c- Xperia 現在反過來，pixel 當電腦，xperia 當外接的 xperia 選「檔案傳輸」 pixel 的 USB 的控制裝置選「已連接的裝置」 這時候其實 pixel 會自動禁用「USB 用途」的選項，你也沒得選。 再來就是神奇的部份了！pixel 內建的檔案瀏覽器其實沒有任何啟動的 icon，也就是你只能等手機自己跳出系統的檔案應用程式，沒辦法手動直接啟動它。如果你把那個自動跳出的檔案程式拉掉（清掉）的話，也只能重插 USB 希望它跳出來。到底？？ ","date":"2023-08-26","objectID":"/2023/08/android-otg/:2:0","tags":null,"title":"Android OTG 手機對接傳檔案","uri":"/2023/08/android-otg/"},{"categories":null,"content":"測試過程 還有些不太重要的過程。就是測試中只能從 xperia 那隻切換角色，在 pixel 上切換「USB 的控制裝置」會顯示無法切換，這就是我說的雙向溝通好像不太順利的部份。而且 xperia 那隻其實沒有 USB 控制裝置的選項，要直接選到對的 USB 用途。不知道是不是 android 版本比較舊的關係。 ","date":"2023-08-26","objectID":"/2023/08/android-otg/:3:0","tags":null,"title":"Android OTG 手機對接傳檔案","uri":"/2023/08/android-otg/"},{"categories":null,"content":"第三方檔案程式 前面說只有系統內建的檔案程式才有權限看到，但其實第三方的程式可以「呼叫」出內建的檔案程式，設定好後也是可以讀取的，算是比較間接的方式。 我自己是常用 MiXplorer 這個管理檔案。在他們的說明中，似乎將那個內建的檔案瀏覽器稱為 Document Provider。 在把線接好、USB 選好後，開啟 mix 側邊欄 右上角 -\u003e Add storage Document provider (USB OTG, …) 找到另一隻手機的空間，選取 它會新增一個書籤，點開就可以看到檔案。 如果要刪除書籤，把書籤項目往右滑可以看到刪除選項（個人覺得這 UX 實在不太好啊，應該是要長按才對吧） 不知道是不是 android 的系統限制讓第三方程式無法直接看到其他的檔案空間。 ","date":"2023-08-26","objectID":"/2023/08/android-otg/:4:0","tags":null,"title":"Android OTG 手機對接傳檔案","uri":"/2023/08/android-otg/"},{"categories":null,"content":"iOS 最後再測試 android 對接 iPad。結論是 android 可以讀 iPad，iPad 不能讀 android，嘻嘻。不過之前看過有人給 iPhone 讀 OTG 隨身碟，可能只是我沒測出來怎麼用吧。 USB 選法規則同上，android 當電腦。選好後通知欄有個 Android 系統的通知「已連線至 iPad 輕觸即可查看檔案」。選「媒體傳輸通訊協定主機」會直接跳出系統的檔案程式，可以看到 DCIM 資料夾和照片，但看不到 iPad 上各個程式的檔案。 ","date":"2023-08-26","objectID":"/2023/08/android-otg/:5:0","tags":null,"title":"Android OTG 手機對接傳檔案","uri":"/2023/08/android-otg/"},{"categories":null,"content":"緣起 在畢業後終於有一小段時間時間是徹底屬於自己的了。打開 trello 想把以前的代辦事項處理掉，看到三年多前記下要寫資安 writeup… … 不是，我怎麼可能記得三年前在解什麼題目！ 其實我一直想要有個可以紀錄技術的地方，讓自己可以複習學過的東西，但覺得很麻煩就沒有弄。 我想要用 markdown 紀錄，主要是為了 coding block 的語法，同時還要可以搜尋。用 hackmd/github 的話，東西散落在不同地方，要搜尋不方便。用 Google Docs 的話沒有 markdown 可以用，搜尋也是不方便。一般的部落格網站也沒有 markdown 可以用。剩下的可能性就是自己架了，結果就一直拖到現在… 而現在正好是難得的空閒時間！要的話肯定是趁現在弄好，於是終於生出來了！實際上也是花了兩個禮拜才調整到覺得可接受的範圍。之後有可能再換其他主題，目前就先這樣吧。 雖然這個部落格是為了寫資安相關 writeup 誕生的，但光設置的過程感覺馬上就可以紀錄下來了。 這裡就把踩過的雷留個紀錄吧！ ","date":"2023-06-29","objectID":"/2023/06/blog-start/:1:0","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"踩雷過程 ","date":"2023-06-29","objectID":"/2023/06/blog-start/:2:0","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"Static Site Generator 這是可以幫你把原始碼 (markdown, html, css…) 轉換成對應的網站的工具。有些是我後來才看到的，所以還沒玩到 Hugo Hexo VitePress Hydejack (Jekyll theme) Hugo 和 Hexo 算是一個框架，你可以再選擇使用不同的主題 (theme)，他們會幫你建出最後的網站。 Hydejack 是找資料時發現的部落格主題。我原本以為 Jekyll 只能做出很簡陋的網站，沒想到它甚至還有搜尋功能。之後如果想玩的話再來研究吧 ","date":"2023-06-29","objectID":"/2023/06/blog-start/:2:1","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"Hugo 使用 Go 開發，宣稱 build 速度最快的，所以一開始就先選它了。但後來發現比起 build 最快，更重要的應該是 build 出來後網站的 user experience 更好才是最重要的，而這部份就要看各個主題作者的功力了。似乎不會對產出的結果做 minify，這個動作是縮小檔案大小，使網站載入速度更快。如果 build 很快但載入很慢那其實沒什麼用。 宣稱支援 i18n，但實際功能根本半殘，不會自動 fallback 文章到唯一的語言。假設 A 文章是中文， B 文章是英文，那選擇中文時只會看到 A，選擇英文時只會看到 B。我頂多只是要翻譯選單文字而已，所以為了選單切換語言後可能變成 0 篇文章。 宣稱支援圖片處理，我以為是可以自動壓縮圖片檔案大小，產出多種不同品質的圖檔，讓前端可以動態載入適合的大小。結果只是提供切割或縮放之類的 function 給你呼叫，還不如自己寫 shell script 轉換。（也有可能是要給主題作者用的吧？至少目前的主題中沒看到任何效果） 對主題的部份做個說明。有些主題的 github repo 中會有 exampleSite 的資料夾，如果裝好後什麼都沒看到，就把資料夾裡的東西複製出來，通常就會有些東西。要他們把說明文件寫清楚點好像很困難。 然後我還是覺得 Go template 語法很醜。我不是針對 Go template，我是說在座各位 都是xx JSX 很棒啊，要嘛是 html，要嘛是 JavaScript。學學 JSX 優點還是有的啦。像是有個功能是可以根據 git 紀錄自動獲得文章的最後修改時間，這功能我就覺得還不錯。 ","date":"2023-06-29","objectID":"/2023/06/blog-start/:2:2","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"Hexo 使用 JavaScript 開發。沒用過不知道效果如何，但比起 Go 更有可能對 build 出來的東西做優化吧？畢竟是前端霸主 JavaScript，處理起來應該比較方便。 ","date":"2023-06-29","objectID":"/2023/06/blog-start/:2:3","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"主題比較 Stack LoveIt VitePress hydejack 版面配置 喜歡 還行 內容顯示 不行 功能豐富 SPA ❌ ❌ ⭕ ⭕ 沒認真玩的就先空著。 一開始先試 stack 因為他的版面配置還算喜歡，文章切三欄，網站導覽列及作者在左，TOC 在右。但試用後發現文章內的功能太少，顯示也不好看。包括：文章標題沒有 anchor 可以點擊， coding block 樣式太醜，連用兩個時甚至看不到分界，連結不夠明顯，搜尋功能有 bug，文章的 html title 不會自動包含網站名稱。後來就放棄了。 目前看到 coding block 樣式最漂亮的是 hexo 的 shoka，但這個主題的網站特效太多超 lag，完全不考慮。 LoveIt 功能算是蠻完整的，不過我有再上些 patch，像是文章的時間滑鼠停留在上面會顯示完整時間，修改首頁的頭像說明文字、連結，搜尋功能 lunr 原本的配置也不好用。還有一點，license 的部份是全站的設置，邏輯上來說應該要可以每篇文章個別設置，雖然我都不太在乎就是了。 最後就是 LoveIt 主題並非 Single Page Application (SPA)。可以在這兩個網站 1, 2 點擊連結，感受切換不同頁面時的效果。SPA 切換頁面會比較流暢，非必要，但有會更好。 ","date":"2023-06-29","objectID":"/2023/06/blog-start/:2:4","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"部屬 原本就打算架在 GitHub Pages 上，不過我找了一陣子才看到我要的功能 Deploy keys，怎麼不和 access token 之類的說明放一起呢… 有 Deploy key 就可以從任何環境中推到 GitHub 上，不過有個刪除上的 bug，有打算用的話要先看一下這個 bug。 ","date":"2023-06-29","objectID":"/2023/06/blog-start/:2:5","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"ToDo 圖片的部份還沒決定到底要怎麼處理。看到有些人用外部服務像是 imgur 或是 cloudinary，也有直接放在 GitHub 上的，不用怕服務收掉，但這樣 repo 的大小就會比較大。好難抉擇啊… 這篇就紀錄到這。之後有文章的話差不多也是這樣吧，各種廢話+迷因+筆記～ ","date":"2023-06-29","objectID":"/2023/06/blog-start/:3:0","tags":null,"title":"部落格誕生了！","uri":"/2023/06/blog-start/"},{"categories":null,"content":"This is doraeric. Welcome to my blog.","date":"2023-06-29","objectID":"/about/","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"About Me Hi! This is Eric Hsieh (doraeric), a cyber security researcher and open-source enthusiast. Degree: MS degree in Electrical Engineering: Cybersecurity, NTU (2022) ","date":"2023-06-29","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Publication C.Y. Hsieh, H.Y. Chen, S.H. Shen, C.H. Hung, and T.N. Lin. 2022. A P4-Based Content-Aware Approach to Mitigate Slow HTTP POST Attacks. In Proc. 5th Int. Workshop on P4 in Europe (EuroP4 ’22). ACM, p. 8–14. [Conference Paper] [Slides] [Source Code] [Master Thesis] ","date":"2023-06-29","objectID":"/about/:2:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Honors CVE-2021-43928: Post-auth RCE and privilege escalation in Synology Mail Station ","date":"2023-06-29","objectID":"/about/:3:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Activities NTU Open Source Community, President Sep., 2018 - Aug., 2019 Advanced Info. Security Summer School (AIS3), Student 2018 - 2020 SITCON, Staff 2018 ","date":"2023-06-29","objectID":"/about/:4:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Interests Network Security Parkour Magic FPS Games ","date":"2023-06-29","objectID":"/about/:5:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"About This Blog I just want to have a place where I can keep technical notes. ","date":"2023-06-29","objectID":"/about/:6:0","tags":null,"title":"About","uri":"/about/"}]